문제
N×N크기의 행렬로 표현되는 종이가 있다. 종이의 각 칸에는 -1, 0, 1의 세 값 중 하나가 저장되어 있다. 
우리는 이 행렬을 적절한 크기로 자르려고 하는데, 이때 다음의 규칙에 따라 자르려고 한다.

만약 종이가 모두 같은 수로 되어 있다면 이 종이를 그대로 사용한다.
(1)이 아닌 경우에는 종이를 같은 크기의 9개의 종이로 자르고, 각각의 잘린 종이에 대해서 (1)의 과정을 반복한다.
이와 같이 종이를 잘랐을 때, -1로만 채워진 종이의 개수, 0으로만 채워진 종이의 개수, 1로만 채워진 종이의 개수를 구해내는 프로그램을 작성하시오.

입력
첫째 줄에 N(1 ≤ N ≤ 37, N은 3k 꼴)이 주어진다. 다음 N개의 줄에는 N개의 정수로 행렬이 주어진다.

출력
첫째 줄에 -1로만 채워진 종이의 개수를, 둘째 줄에 0으로만 채워진 종이의 개수를, 셋째 줄에 1로만 채워진 종이의 개수를 출력한다.

예제 입력 1 
9
0 0 0 1 1 1 -1 -1 -1
0 0 0 1 1 1 -1 -1 -1
0 0 0 1 1 1 -1 -1 -1
1 1 1 0 0 0 0 0 0
1 1 1 0 0 0 0 0 0
1 1 1 0 0 0 0 0 0
0 1 -1 0 1 -1 0 1 -1
0 -1 1 0 1 -1 0 1 -1
0 1 -1 1 0 -1 0 1 -1
예제 출력 1 
10
12
11

알고리즘 분류
분할 정복
재귀

------------------------------------------------------------------------------------

#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
#define fastio ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)
using namespace std;
int graph[2188][2188];
map<int, int> m1;
void check(int x, int y, int level) {
	int flag = graph[x][y];
	for (int i = x; i < x + level; i++) {
		for (int j = y; j < y + level; j++) {
			if (graph[i][j] != flag) {  //만약 전부 같은수로 이루어져있지 않다면
				flag = 10;
				break;
			}
		}
		if (flag == 10) break;
	}
	if (flag == 10) {                     //9등분해서 다시 탐색 
		level /= 3;
		check(x, y, level);
		check(x + level, y, level);
		check(x + 2 * level, y, level);
		check(x, y + level, level);
		check(x, y + 2 * level, level);
		check(x + level, y + level, level);
		check(x + 2 * level, y + level, level);
		check(x + level, y + 2 * level, level);
		check(x + 2 * level, y + 2 * level, level);
	}
	else {              //전부 같은수면 해당 종이 수 증가
		m1[flag]++;
	}
}
int main() {
	fastio;
	int N,a;
	cin >> N;
	
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			cin >> a;
			graph[i][j] = a;
		}
	}
	check(0, 0, N);
	cout << m1[-1] << '\n';
	cout << m1[0] << '\n';
	cout << m1[1] << '\n';
	return 0;
}
