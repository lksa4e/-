백준 - 16172 <나는 친구가 적다(Large)>

문제
친구가 적은 성민이는 수업에 결석해도 시험이나 과제에 대한 정보를 제대로 얻을 수 없었다. F 학점을 받을 위기까지 아슬아슬하게 결석일 수를 유지하던 성민이는, 
어느 날 갑자기 영문도 모른 채 쪽지시험을 보게 되었다!

갑작스러운 쪽지 시험으로 마음이 급해진 성민이는 매직아이를 사용해 벼락치기를 하기로 한다.

성민이가 듣는 과목의 교과서는, 알파벳 소문자(a-z)와 알파벳 대문자(A-Z)로만 이루어져 있다. 성민이가 교과서에서 찾고자 하는 키워드도 역시 알파벳 소문자와 대문자로만 이루어져 있다. 
하지만, 성민이에겐 큰 문제가 생겼다. 결석한 날의 수업 내용을 친구에게 빌려 필기를 하던 중, 교과서에 숫자(0-9)를 적어버린 것이다.

키워드를 찾기 힘들어 패닉에 빠진 성민이는 몇 안 되는 친구인 당신에게 도움을 요청했다. 성민이를 도와, 교과서에서 성민이가 찾고자 하는 키워드의 존재 여부를 알려주자.

입력
첫 번째 줄에는 알파벳 소문자, 대문자, 숫자로 이루어진 문자열 S가 주어진다. (1 ≤ |S| ≤ 200,000) 두 번째 줄에는 성민이가 찾고자 하는 알파벳 소문자, 
대문자로만 이루어진 키워드 문자열 K가 주어진다. (1 ≤ |K| ≤ 200,000)

단, 입력으로 들어오는 키워드 문자열 K의 길이는, 교과서의 문자열 S보다 짧거나 같다.

출력
첫 번째 줄에 성민이가 찾고자 하는 키워드가 교과서 내에 존재하면 1, 존재하지 않으면 0을 출력한다.


----------------------------------------------------------------------------------------------------------------------------------------------------

#include <iostream>
#include <vector>
#include <string>
#include <cctype>
using namespace std;

vector<int> getpi(string s) {
	auto m = (int)s.size();
	int j = 0;
	vector<int> pi(m, 0);    // LSP 테이블
	for (int i = 1; i < m; i++) {
		if (isdigit(s[i])) continue;   // 숫자 제거하기
		while (j > 0 && s[i] != s[j]) {     // 미스매치 생겼을 때 탐색위치를 몇개 건너뛸 수 있는지 체크하기 위한 while문 -> 바로 이전의 최대 prefix, suffix 기준으로 검사를 skip 할수 있는지?
			j = pi[j - 1];
		}
		if (s[i] == s[j]) {   // 매치하면 LSP 테이블 갱신, 탐색위치 변경
			pi[i] = ++j;
		}
	}
	return pi;    //LSP 테이블 반환
}

int kmp(string s, string p) {
	auto n = (int)s.size();
	auto m = (int)p.size();
	int ans = 0;
	int j = 0;
	vector<int> table = getpi(p);
	for (int i = 1; i < n; i++) {
		if (isdigit(s[i])) continue;
		while (j > 0 && s[i] != p[j]) {       // 미스매치 생겼을 때 getpi에서 구해놓은 LSP 통해 몇개 건너뛸 수 있는지 체크
			j = table[j - 1];
		}
		if (s[i] == p[j]) {         //매치했을 때
			if (j == m - 1) {        //전부 다 매치했다면
				ans++;
				j = table[j];
			}
			else {      //탐색위치 변경
				j++;
			}
		}
	}
	if (ans > 0) {
		return 1;
	}
	else {
		return 0;
	}
}

int main() {
	string s, p;
	cin >> s >> p;
	int flag = kmp(s, p);
	cout << flag;
	return 0;
}
