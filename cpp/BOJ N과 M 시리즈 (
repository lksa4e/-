BOJ 15650 - N과 M(2)
BOJ 15652 - N과 M(4)
BOJ 15654 - N과 M(5)
BOJ 15657 - N과 M(8)
BOJ 15663 - N과 M(9)
BOJ 15666 - N과 M(12)

==============================================================================================


BOJ 15650 - N과 M(2)

자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열
고른 수열은 오름차순이어야 한다.

예제 입력 2 
4 2
예제 출력 2 
1 2
1 3
1 4
2 3
2 4
3 4
------------------------------------------------------
 오름차순으로 출력되어야 하므로 - for문의 시작을 idx부터
 중복 없이 M개를 골라야 하므로 -  dfs 다음단계에로 갈 때 idx + 1을 한다.
------------------------------------------------------
void solve(int idx, int cnt) {
	if (cnt == M) {
		for (int i = 1; i <= M;  i++) {
			cout << arr[i] << " ";
		}
		cout << '\n';
		return;
	}
	for (int i = idx; i <= N; i++) {
		arr[cnt + 1] = i;
		solve( i+1 , cnt + 1);
	}
}


==================================================================================================
BOJ 15652 - N과 M(4)
자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

1부터 N까지 자연수 중에서 M개를 고른 수열
같은 수를 여러 번 골라도 된다.
고른 수열은 비내림차순이어야 한다.
길이가 K인 수열 A가 A1 ≤ A2 ≤ ... ≤ AK-1 ≤ AK를 만족하면, 비내림차순이라고 한다.

예제 입력 2 
4 2
예제 출력 2 
1 1
1 2
1 3
1 4
2 2
2 3
2 4
3 3
3 4
4 4

---------------------------------------------------------------------------
오름차순으로 출력되어야 하므로 - for문의 시작을 idx부터
같은 수를 여러번 골라도 된다고 하였으므로 - dfs 다음 단계로 갈 때 idx를 그대로 가져간다.

---------------------------------------------------------------------------
void solve(int idx, int cnt) {
	if (cnt == M) {
		for (int i = 1; i <= M; i++) {
			cout << arr[i] << " ";
		}
		cout << '\n';
		return;
	}
	for (int i = idx; i <= N; i++) {
		arr[cnt + 1] = i;
		solve(i, cnt + 1);
	}
}


==================================================================================================

BOJ 15654 - N과 M(5)

N개의 자연수와 자연수 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오. N개의 자연수는 모두 다른 수이다.

N개의 자연수 중에서 M개를 고른 수열

예제 입력 2 
4 2
9 8 7 1
예제 출력 2 
1 7
1 8
1 9
7 1
7 8
7 9
8 1
8 7
8 9
9 1
9 7
9 8
------------------------------------------------------
 같은 숫자를 사용하지 않으므로 visit 배열을 사용하여 중복사용 회피
------------------------------------------------------
void solve(int cnt) {
	if (cnt == M) {
		for (int i = 0; i < M;  i++) {
			cout << arr[i] << " ";
		}
		cout << '\n';
		return;
	}
	for (int i = 0; i < N; i++) {
		if (!visit[v[i]]) {
			visit[v[i]] = 1;
			arr[cnt] = v[i];
			solve(cnt + 1);
			visit[v[i]] = 0;
		}
		
	}
}


==================================================================================================

BOJ 15657 - N과 M(8)

N개의 자연수와 자연수 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오. N개의 자연수는 모두 다른 수이다.

N개의 자연수 중에서 M개를 고른 수열
같은 수를 여러 번 골라도 된다.
고른 수열은 비내림차순이어야 한다.
길이가 K인 수열 A가 A1 ≤ A2 ≤ ... ≤ AK-1 ≤ AK를 만족하면, 비내림차순이라고 한다.

예제 입력 2 
4 2
9 8 7 1
예제 출력 2 
1 1
1 7
1 8
1 9
7 7
7 8
7 9
8 8
8 9
9 9

------------------------------------------------------
 오름차순으로 출력되어야 하므로 - vector sorting, 시작위치 idx
 중복 가능하므로  -  dfs 다음단계에로 갈 때 그대로 idx
------------------------------------------------------

void solve(int idx, int cnt) {
	if (cnt == M) {
		for (int i = 1; i <= M; i++) {
			cout << arr[i] << " ";
		}
		cout << '\n';
		return;
	}
	for (int i = idx; i < v.size(); i++) {
		arr[cnt + 1] = v[i];
		solve(i, cnt + 1);
	}
}


==================================================================================================

BOJ 15663 

문제
N개의 자연수와 자연수 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

N개의 자연수 중에서 M개를 고른 수열

예제 입력 2 
4 2
9 7 9 1
예제 출력 2 
1 7
1 9
7 1
7 9
9 1
9 7
9 9


------------------------------------------------------
문제에 입력에 중복이 없다는 조건이 없다.
set 자료구조를 이용하여 중복을 없애주거나,
before 변수를 사용하여 해당 for문(해당 depth)에서의 중복출력을 피한다.
------------------------------------------------------

void solve(int cnt) {
	if (cnt == M) {
		for (int i = 1; i <= M; i++) {
			cout << arr[i] << " ";
		}
		cout << '\n';
		return;
	}
	int before = -1;
	for (int i = 0; i < v.size(); i++) {
		if (!visit[i] && before != v[i]) {
			before = v[i];
			visit[i] = 1;
			arr[cnt + 1] = v[i];
			solve(cnt + 1);
			visit[i] = 0;
		}
	}
}


==================================================================================================

BOJ 15666 - N과 M(12)

문제
N개의 자연수와 자연수 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

N개의 자연수 중에서 M개를 고른 수열
같은 수를 여러 번 골라도 된다.
고른 수열은 비내림차순이어야 한다.
길이가 K인 수열 A가 A1 ≤ A2 ≤ ... ≤ AK-1 ≤ AK를 만족하면, 비내림차순이라고 한다.

예제 입력 2 
4 2
9 7 9 1
예제 출력 2 
1 1
1 7
1 9
7 7
7 9
9 9

------------------------------------------------------
 오름차순으로 출력되어야 하므로 - vector sort, 시작위치 idx
 같은 수를 여러번 골라도 되므로 - dfs 다음단계  index
 입력이 중복 가능하므로 before 사용하여 체크
------------------------------------------------------
void solve(int idx, int cnt) {
	if (cnt == M) {
		for (int i = 1; i <= M; i++) {
			cout << arr[i] << " ";
		}
		cout << '\n';
		return;
	}
	int before = -1;
	for (int i = idx; i < v.size(); i++) {
		if (before != v[i]) {
			before = v[i];
			arr[cnt + 1] = v[i];
			solve(i, cnt + 1);
		}
	}
}

==================================================================================================
